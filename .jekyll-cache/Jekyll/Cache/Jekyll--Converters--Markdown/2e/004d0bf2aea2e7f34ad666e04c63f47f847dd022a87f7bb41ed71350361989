I"k<h1 id="这大概是一篇文档">这大概是一篇文档</h1>

<p>Github: <a href="https://github.com/Renovamen/jekyll-theme-gungnir" target="_blank"><i class="fas fa-link"></i> Renovamen/jekyll-theme-gungnir</a></p>

<p>在 <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank">Huxpro/huxpro.github.io</a> 的基础上瞎改的的主题，同时<del>照搬</del>借鉴了很多其他主题的代码和设计，包括但不限于 <a href="https://github.com/mashirozx/Sakura/" target="_blank">mashirozx/Sakura</a>、<a href="https://github.com/kitian616/jekyll-TeXt-theme" target="_blank">kitian616/jekyll-TeXt-theme</a>、<a href="https://github.com/Fechin/hexo-theme-diaspora" target="_blank">Fechin/hexo-theme-diaspora</a>、<a href="https://github.com/liuzc/LeaveIt" target="_blank">liuzc/LeaveIt</a> 等（这么看来似乎也没多少东西是我自己写的了，逃）。</p>

<p><strong>Gungnir</strong>，冈格尼尔，北欧神话中主神奥丁使用的用世界树树枝做成的武器，和本主题并没有什么关系但我就是用了这个名字。</p>

<p><img src="../img/docs/gungnir.jpg" alt="theme-gungnir" /></p>

<h2 id="安装">安装</h2>

<p>从 GitHub 克隆项目：</p>

<pre><code class="language-bash">git clone https://github.com/Renovamen/jekyll-theme-gungnir.git
cd jekyll-theme-gungnir
</code></pre>

<p>本地运行主题需要参考<a href="https://jekyllrb.com/docs/installation/" target="_blank">这里</a>安装 Ruby 和 Jekyll。然后安装依赖包：</p>

<pre><code class="language-bash">bundle config set path 'vendor/bundle'
bundle install
</code></pre>

<p>然后即可本地预览：</p>

<pre><code class="language-bash">bundle exec jekyll serve --watch
</code></pre>

<p>如果想要改动代码，你可能需要 <a href="https://nodejs.org/en/">Node.js</a>，并安装 <a href="https://gruntjs.com/" target="_blank">Grunt</a>（用于压缩 js 文件）：</p>

<pre><code class="language-bash">npm install
</code></pre>

<p>然后：</p>

<pre><code class="language-bash">npm run dev
</code></pre>

<h2 id="配置">配置</h2>

<p class="info">以下配置都在 <code>_config.yml</code> 中进行。</p>

<h3 id="网站配置">网站配置</h3>
<pre><code class="language-yaml">title: Renovamen # 标题
SEOTitle: Renovamen's blog # SEO 标题
description: Hmm, interesting blog. # 描述
keyword: "blog, personal website" # 关键词
url: "https://renovamen.ink" # 域名
baseurl: "" # 根路径。比如网站地址为 'https://renovamen.ink/blog'，则该项应为 '/blog'
avatar: "img/header-avatar.jpeg" # 首页头像路径
</code></pre>

<h3 id="主题风格">主题风格</h3>
<pre><code class="language-yaml">theme_style: 
  highlight:  # 代码高亮主题
  alert:  # 提示风格
  post_preview: # 首页文章列表显示风格
</code></pre>

<h4 id="代码高亮">代码高亮</h4>

<p>代码高亮渲染用 <a href="https://highlightjs.org/" target="_blank">Highlight.js</a> 代替了 <a href="http://rouge.jneen.net/" target="_blank">Rouge</a>。默认的代码高亮大概长这样：</p>

<pre><code class="language-python">import food

class Dragon:
    def __init__(self, happiness):
        self.happiness = happiness
    def code(self):
        """ just code """
        self.happiness -= 60
    def eat(self, n)
        # just eat
        self.happiness += n * food.size

me = Dragon(100)

while True:
    me.code()
    me.eat(10)
</code></pre>

<p>点击显示编程语言的标签可以使代码块全屏，还有光标所在行高亮效果。如果你发现这两点跟 <a href="https://2heng.xin/theme-sakura/" target="_blank">Sakura</a> 主题很像，那么没错这部分的代码就是从它那搬过来的…</p>

<p>代码高亮的默认主题为 <code>dark</code>，还有一个 <code>light</code> 主题可选：</p>

<pre><code class="language-yaml">highlight: # "dark" (default), "light"
</code></pre>

<p>代码高亮的样式文件在 <a href="https://github.com/Renovamen/jekyll-theme-gungnir/tree/master/_sass/highlight" target="_blank"><code>_sass/highlight</code></a> 目录下，可以自行调整样式，或者直接引用 highlight.js 自带的<a href="https://github.com/highlightjs/highlight.js/tree/master/src/styles" target="_blank">一堆主题</a>。</p>

<h4 id="提示">提示</h4>
<p>支持在 Markdown 中使用提示样式以呈现一些警告，<a href="#提示-1">这里</a>是使用方法。指定提示风格：</p>
<pre><code class="language-yaml">alert:  # "flat" (default), "modern"
</code></pre>

<p>默认为 <code>flat</code>，长<a href="#配置">这样</a>。<code>modern</code> 风格长这样：</p>

<p><img src="../img/docs/alert-modern.png" alt="alert-modern" /></p>

<h4 id="首页文章列表">首页文章列表</h4>

<p>首页文章列表是否显示特征图片，<code>image</code> 为显示（默认），<code>text</code> 为不显示：</p>

<pre><code class="language-yaml">post_preview: # "image" (default), "text"
</code></pre>

<p><code>image</code>：
<img src="../img/docs/preview-image.jpg" alt="preview-image" /></p>

<p><code>text</code>：
<img src="../img/docs/preview-text.jpg" alt="preview-text" /></p>

<h3 id="社交链接">社交链接</h3>

<pre><code class="language-yaml">sns:
  github_username: # Github
  weibo_username: # 微博
  zhihu_username: # 知乎
  twitter_username: # 推特  
  facebook_username: # Facebook
  linkedin_username:  # 领英
  email_address: # 邮件地址
</code></pre>
<p>填入用户名或用户 ID 后，社交链接会出现在首页封面和 About 页上。</p>

<h3 id="导航菜单">导航菜单</h3>

<p>一级菜单的配置如下：</p>

<pre><code class="language-yaml">menus:
  - title: Home
    font: fab fa-fort-awesome
    url: /
  - title: Archive
    font: fas fa-archive
    url: /archive/
</code></pre>

<p>需要填入每个页面的名称、路径和图标。图标库使用了 <a href="https://fontawesome.com" target="_blank">Font Awesome</a>，可以在<a href="https://fontawesome.com/icons" target="_blank">这里</a>查找图标。</p>

<p>如果要添加<strong>二级菜单</strong>，则需要在需要添加二级菜单的一级菜单下添加 <code>submenus</code> 关键字，然后在 <code>submenus</code> 下填入每个二级菜单页面的名称、路径和图标：</p>

<pre><code class="language-yaml">menus:
  - title: About
    font: fas fa-paw
    submenus:
      - title: Me
        font: fas fa-user-astronaut
        url: /about/
      - title: Theme
        font: fas fa-meteor
        url: /theme/
</code></pre>

<h3 id="评论">评论</h3>

<pre><code class="language-yaml">comment: 
  provider: # false (default), "disqus", "gitalk", "valine"
</code></pre>

<p>支持三种评论系统：Disqus、Gitalk 和 Valine。需要在 <code>provider</code> 中填入想要启用的评论系统的名字，如果不想用启用评论就填 <code>false</code> 或不填。</p>

<h4 id="disqus">Disqus</h4>

<p>在 <a href="https://disqus.com/" target="_blank">Disqus</a> 申请一个自己网站的 Disqus，然后把 shortname 填入 <code>disqus_username</code>：</p>

<pre><code class="language-yaml">comment: 
  provider: disqus
  disqus_username: # Disqus shortname
</code></pre>

<h4 id="gitalk">Gitalk</h4>

<p>注册一个 <a href="https://github.com/settings/applications/new" target="_blank">Github Application</a> 并搞到 Client ID 和 Client Secret，然后填入对应信息：</p>

<pre><code class="language-yaml">comment: 
  provider: gitalk
  gitalk:
    clientID: # Github Application Client ID
    clientSecret: # Github Application Client Secret
    repo: # 用来放评论的 Github 仓库
    owner: # 上述 Github 仓库的拥有者 ID
    admin: 
      - 管理员1
      - 管理员2
      - ...
</code></pre>

<p>可以参考 <a href="https://github.com/gitalk/gitalk" target="_blank">Gitalk 文档</a>。</p>

<h4 id="valine">Valine</h4>

<p>按照 <a href="https://valine.js.org/" target="_blank">Valine 文档</a> 在 <a href="https://www.leancloud.cn/" target="_blank">LeanCloud</a> 注册应用，然后填入 App ID 和 App Key：</p>

<pre><code class="language-yaml">comment: 
  provider: valine
  valine:
    appID: # LeanCloud App ID
    appKey: # LeanCloud App Key
</code></pre>

<h3 id="站点统计">站点统计</h3>

<p>支持谷歌统计和百度统计。</p>

<h4 id="百度统计">百度统计</h4>

<p>搞到<a href="https://tongji.baidu.com/web/welcome/login" target="_blank">百度统计</a>的统计代码并填入对应位置：</p>

<pre><code class="language-yaml">analytics:
  ba_track_id: # 百度统计代码
</code></pre>

<h4 id="谷歌统计">谷歌统计</h4>

<p>搞到<a href="https://www.google.com/analytics/" target="_blank">谷歌统计</a>的跟踪 ID 并填入对应位置：</p>

<pre><code class="language-yaml">analytics:
  ga_track_id: 'G-ZYM02DSEHS' # 谷歌统计跟踪 ID
</code></pre>

<h3 id="cdn-源">CDN 源</h3>

<pre><code class="language-yaml">cdn: # "jsdelivr" (default), "bootcdn", "unpkg", "cdnjs"
</code></pre>

<p>默认使用 <a href="https://www.jsdelivr.com/" target="_blank">jsDelivr</a> 作为所有引用的开源库的 CDN 源，也可以把 CDN 源配置为 <a href="https://www.bootcdn.cn/" target="_blank">BootCDN</a>、<a href="https://unpkg.com/" target="_blank">unpkg</a> 或 <a href="https://cdnjs.com/" target="_blank">cdnjs</a>。可以在 <code>_data/cdn.yml</code> 中看到所有 CDN 地址。</p>

<h3 id="markdown-附加功能">Markdown 附加功能</h3>

<pre><code class="language-yaml">math: 
    enable: # 是否对所有文章启用公式渲染
            # false (default), true 
    engine: # 公式渲染引擎
            # "katex" (default), "mathjax"
chart: # 是否启用 Chart.js：false (defaule), true
mermaid: # 是否启用 mermaid：false (default), true
emoji-plus: # 是否启用附加表情：false (default), true
</code></pre>

<p><a href="#markdown-附加功能-1">这里</a>是具体说明。</p>

<h3 id="一言">一言</h3>

<pre><code class="language-yaml">hitokoto: true # default: false
</code></pre>

<p>将 <code>hitokoto</code> 设为 <code>true</code> 可以开启首页的<a href="https://hitokoto.cn/" target="_blank">一言</a>气泡，将鼠标悬浮在头像上气泡就会显示出来：</p>

<p><img src="../img/docs/hitokoto-bubble.jpg" alt="Hitokoto Bubble" /></p>

<h2 id="页面">页面</h2>

<h3 id="首页">首页</h3>

<p>在 <code>index.html</code> 的 Front-matter 中设置：</p>

<pre><code class="language-yaml">description: # 想在首页显示的一句话
header-img:
  - url: # 首页封面图路径1
    mask: # 封面图1的遮罩（可选），格式：rgba(40, 57, 101, .4)
  - url: # 首页封面图路径2
    mask: # 封面图1的遮罩（可选）
</code></pre>

<p>在首页点击封面图左右两边的按钮可以在多图片之间进行切换。需要按上述格式在 <code>header-img</code> 下填入每张封面图的路径和遮罩的 RGB 数值（可选）。遮罩是指在封面图上盖一层半透明的颜色，如果图片比较复杂导致文字显示得不够清楚，可以考虑加个遮罩。</p>

<h3 id="about">About</h3>

<p>参考一下本站 <a href="/about" target="_blank">About 页面</a> 和它的 <a href="https://github.com/Renovamen/jekyll-theme-gungnir/blob/master/about.html" target="_blank">Front-matter</a> 大概就知道怎么改了？</p>

<h3 id="links">Links</h3>

<p>参考一下本站 <a href="/links" target="_blank">Links 页面</a> 和它的 <a href="https://github.com/Renovamen/jekyll-theme-gungnir/blob/master/links.html" target="_blank">Front-matter</a> 大概就知道怎么改了？（复读 *1）</p>

<p>如果没有指定某个链接的头像，那么会显示默认头像（<code>img/links/default.jpg</code>）。</p>

<p>如果想在该页面开启评论，需要在 <code>_config.yml</code> 中启用评论并在该页的 Front-matter 中设 <code>comment: true</code>。</p>

<h2 id="内容">内容</h2>

<h3 id="文章">文章</h3>

<p>把要发布的文章放在 <code>_posts/</code> 文件夹中，文件名格式为 <code>年-月-日-标题.md</code>，然后配置其 YAML Front-matter：</p>

<pre><code class="language-yaml">---
layout: post
title: # 文章标题
subtitle: # 副标题
author: # 作者名称，默认为网站名称
header-img: # 文章封面图
header-mask: # 封面图遮罩，格式：rgba(40, 57, 101, .4)
header-style: text # 如果不想该文章显示封面图，就需要加这一项
catalog: # 是否显示目录：false (default), true
math: # 是否开启数学公式渲染
tags: # 标签
  - 标签1
  - 标签2
  - ...
---
</code></pre>

<p>其中 <code>header-img</code> 会同时显示在<a href="#首页文章列表">首页</a>和文章页。<code>math</code> 的配置可以参考<a href="#数学公式渲染">这里</a>。</p>

<h3 id="markdown-附加功能-1">Markdown 附加功能</h3>

<h4 id="数学公式渲染">数学公式渲染</h4>

<p>支持使用 <a href="https://github.com/mathjax/MathJax" target="_blank">Mathjax</a> 或 <a href="https://github.com/KaTeX/KaTeX" target="_blank">Katex</a> 来在文章中渲染数学公式。</p>

<p>Katex 渲染速度快于 Mathjax（可以参考<a href="https://katex.org/" target="_blank">这里</a>），但支持的 Tex 公式少于 Mathjax（<a href="https://katex.org/docs/supported.html" target="_blank">这里</a>是 Katex 支持的公式列表）。</p>

<p>如果 <code>_config.yml</code> 中 <code>math.enable: false</code>，则只有 Front-matter 中添加了 <code>mathjax: true</code> 的文章才会开启公式渲染：</p>

<pre><code class="language-yaml">---
layout: post
mathjax: true
---
</code></pre>

<p>否则所有文章（包括 <code>post</code> 和 <code>keynote</code>）中都会开启此功能。</p>

<p>示例：</p>

<p>Inline math: \(E = mc^2\)</p>

<p>Display math:</p>

\[i\hbar\frac{\partial \psi}{\partial t} = \frac{-\hbar^2}{2m} ( \frac{\partial^2}{\partial x^2} + \frac{\partial^2}{\partial y^2} + \frac{\partial^2}{\partial z^2} ) \psi + V \psi.\]

<pre><code class="language-plaintext">$$ E = mc^2 $$

$$
i \hbar \frac{\partial \psi}{\partial t}
= \frac{-\hbar^2}{2m} ( \frac{\partial^2}{\partial x^2} + \frac{\partial^2}{\partial y^2} + \frac{\partial^2}{\partial z^2} ) \psi + V \psi
$$
</code></pre>

<h4 id="图表">图表</h4>

<h5 id="chartjs">Chart.js</h5>

<p>使用了 <a href="https://github.com/chartjs/Chart.js" target="_blank">Chart.js</a> 以在文章中加入可交互的图表。可以参考 <a href="https://www.chartjs.org/docs/latest/" target="_blank">Chart.js 文档</a>来创建表格。</p>

<p>示例：</p>

<pre><code class="language-chart">{
    "type": "bar",
    "data": {
        "labels": ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
        "datasets": [{
            "label": "# of Votes",
            "data": [12, 19, 3, 5, 2, 3],
            "backgroundColor": [
                "rgba(255, 99, 132, 0.2)",
                "rgba(54, 162, 235, 0.2)",
                "rgba(255, 206, 86, 0.2)",
                "rgba(75, 192, 192, 0.2)",
                "rgba(153, 102, 255, 0.2)",
                "rgba(255, 159, 64, 0.2)"
            ],
            "borderColor": [
                "rgba(255, 99, 132, 1)",
                "rgba(54, 162, 235, 1)",
                "rgba(255, 206, 86, 1)",
                "rgba(75, 192, 192, 1)",
                "rgba(153, 102, 255, 1)",
                "rgba(255, 159, 64, 1)"
            ],
            "borderWidth": 1
        }]
    },
    "options": {
        "scales": {
            "yAxes": [{
                "ticks": {
                    "beginAtZero": true
                }
            }]
        }
    }
}
</code></pre>

<pre><code class="json">```chart
{
    "type": "bar",
    "data": {
        "labels": ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
        "datasets": [{
            "label": "# of Votes",
            "data": [12, 19, 3, 5, 2, 3],
            "backgroundColor": [
                "rgba(255, 99, 132, 0.2)",
                "rgba(54, 162, 235, 0.2)",
                "rgba(255, 206, 86, 0.2)",
                "rgba(75, 192, 192, 0.2)",
                "rgba(153, 102, 255, 0.2)",
                "rgba(255, 159, 64, 0.2)"
            ],
            "borderColor": [
                "rgba(255, 99, 132, 1)",
                "rgba(54, 162, 235, 1)",
                "rgba(255, 206, 86, 1)",
                "rgba(75, 192, 192, 1)",
                "rgba(153, 102, 255, 1)",
                "rgba(255, 159, 64, 1)"
            ],
            "borderWidth": 1
        }]
    },
    "options": {
        "scales": {
            "yAxes": [{
                "ticks": {
                    "beginAtZero": true
                }
            }]
        }
    }
}
```
</code></pre>

<p><code class="warning">注意</code>：<code>json</code> 中的 <code>key</code> 值一定要加<strong>引号</strong>，否则会渲染出错。</p>

<h5 id="mermaid">mermaid</h5>

<p>使用了 <a href="https://github.com/knsv/mermaid" target="_blank">mermaid</a> 以在文章中加入流程图、状态图、时序图、甘特图等。可以参考 <a href="https://mermaid-js.github.io/mermaid/" target="_blank">mermaid 文档</a>来创建图。</p>

<p>示例：</p>

<pre><code class="language-mermaid">classDiagram
    Animal &lt;|-- Duck
    Animal &lt;|-- Fish
    Animal &lt;|-- Zebra
    Animal : +int age
    Animal : +String gender
    Animal: +isMammal()
    Animal: +mate()
    class Duck{
        +String beakColor
        +swim()
        +quack()
    }
    class Fish{
        -int sizeInFeet
        -canEat()
    }
    class Zebra{
        +bool is_wild
        +run()
    }
</code></pre>

<pre><code>```mermaid
classDiagram
    Animal &lt;|-- Duck
    Animal &lt;|-- Fish
    Animal &lt;|-- Zebra
    Animal : +int age
    Animal : +String gender
    Animal: +isMammal()
    Animal: +mate()
    class Duck{
        +String beakColor
        +swim()
        +quack()
    }
    class Fish{
        -int sizeInFeet
        -canEat()
    }
    class Zebra{
        +bool is_wild
        +run()
    }
```
</code></pre>

<h4 id="标签">标签</h4>

<p><code class="info">消息标签</code></p>

<pre><code class="language-markdown">`消息标签`{:.info}
</code></pre>

<p><code class="success">成功标签</code></p>

<pre><code class="language-markdown">`成功标签`{:.success}
</code></pre>

<p><code class="warning">警告标签</code></p>

<pre><code class="language-markdown">`警告标签`{:.warning}
</code></pre>

<p><code class="error">错误标签</code></p>

<pre><code class="language-markdown">`错误标签`{:.error}
</code></pre>

<h4 id="提示-1">提示</h4>

<p class="info">消息提示文案</p>

<pre><code class="language-markdown">消息提示文案
{:.info}
</code></pre>

<p class="success">成功提示文案</p>

<pre><code class="language-markdown">成功提示文案
{:.success}
</code></pre>

<p class="warning">警告提示文案</p>

<pre><code class="language-markdown">警告提示文案
{:.warning}
</code></pre>

<p class="error">错误提示文案</p>

<pre><code class="language-markdown">错误提示文案
{:.error}
</code></pre>

<h4 id="表情">表情</h4>
<h5 id="emoji">emoji</h5>

<p>使用了 <a href="https://github.com/jekyll/jemoji" target="_blank">jemoji</a> 插件以在文章中插入 emoji，需要手动安装这个插件：</p>

<pre><code class="language-bash">gem install jemoji
</code></pre>

<p>从<a href="https://pages.github.com/versions/" target="_blank">这里</a>可以看到 Github Pages 上自带 jemoji 插件。<a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank">这里</a>是所有 emoji 的代码。</p>

<p>示例：</p>

<p>:smile: :smirk: :racehorse: :wolf:</p>

<pre><code class="language-markdown">:smile: :smirk: :racehorse: :wolf:
</code></pre>

<h5 id="附加表情">附加表情</h5>

<p>也可以在文章中插入其他表情，目前支持 Bilibili 的小电视表情 <code class="emoji-plus">斜眼笑</code>（效果出乎意料的好）。</p>

<p>示例：</p>

<p><code class="emoji-plus">斜眼笑</code> <code class="emoji-plus">doge</code> <code class="emoji-plus">白眼</code></p>

<pre><code class="language-markdown">`斜眼笑`{:.emoji-plus} `doge`{:.emoji-plus} `白眼`{:.emoji-plus}
</code></pre>

<p><a href="#附录">附录</a>是所有支持的小电视表情和它们对应的代码，表情源文件来源于<a href="https://www.bilibili.com/video/av27621778/" target="_blank">这里</a>。</p>

<h4 id="图片注释">图片注释</h4>

<p><img src="../img/theme.jpg" alt="" /></p>

<p class="desc">这是一张图片</p>

<pre><code class="markdown">![](../img/theme.jpg)

这是一张图片
{:.desc}
</code></pre>

<h2 id="用到的开源库">用到的开源库</h2>

<h3 id="css">CSS</h3>

<ul>
  <li><a href="https://github.com/twbs/bootstrap" target="_blank">Bootstrap</a></li>
  <li><a href="https://github.com/FortAwesome/Font-Awesome" target="_blank">Font Awesome</a></li>
  <li><a href="https://github.com/l-lin/font-awesome-animation" target="_blank">Font Awesome Animation</a>（图标动画）</li>
</ul>

<h3 id="javascript">JavaScript</h3>
<ul>
  <li><a href="https://github.com/jquery/jquery" target="_blank">jQuery</a></li>
  <li><a href="https://github.com/jlmakes/scrollreveal" target="_blank">ScrollReveal</a>（图片模式下文章列表上浮效果，About 页面的时间轴上浮效果）</li>
  <li><a href="https://github.com/tscanlin/tocbot" target="_blank">Tocbot</a>（文章目录）</li>
  <li><a href="https://github.com/bryanbraun/anchorjs/" target="_blank">AnchorJS</a>（文章锚点）</li>
  <li><a href="https://github.com/gitalk/gitalk" target="_blank">Gitalk</a>（Gitalk 评论）</li>
  <li><a href="https://github.com/xCss/Valine" target="_blank">Valine</a>（Valine 评论）</li>
  <li><a href="https://github.com/chartjs/Chart.js" target="_blank">Chart.js</a>（<a href="#chartjs">图表</a>）</li>
  <li><a href="https://github.com/mermaid-js/mermaid" target="_blank">mermaid</a>（<a href="#mermaid">图表</a>）</li>
  <li><a href="https://github.com/mathjax/MathJax" target="_blank">MathJax</a>（公式渲染）</li>
  <li><a href="https://github.com/KaTeX/KaTeX" target="_blank">Katex</a> （公式渲染）</li>
  <li><a href="https://github.com/highlightjs/highlight.js" target="_blank">hightlight.js</a> （代码高亮渲染）</li>
  <li><a href="https://github.com/wcoder/highlightjs-line-numbers.js/" target="_blank">hightlight-line-number.js</a> （给 hightlight.js 生成的代码块加行号的插件）</li>
  <li><a href="https://github.com/christian-fei/Simple-Jekyll-Search" target="_blank">Simple-Jekyll-Search</a>（搜索）</li>
  <li><a href="https://github.com/ftlabs/fastclick" target="_blank">fastclick</a>（解决移动设备上的点击延迟问题）</li>
</ul>

<h2 id="附录">附录</h2>

<table>
  <tbody>
    <tr>
      <td><code class="emoji-plus">白眼</code> <code>`白眼`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">鄙视</code> <code>`鄙视`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">闭嘴</code>   <code>`闭嘴`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">馋</code>   <code>`馋`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">打脸</code>   <code>`打脸`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">大哭</code>   <code>`大哭`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">大佬</code>   <code>`大佬`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">呆</code>   <code>`呆`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">点赞</code> <code>`点赞`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">调皮</code> <code>`调皮`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">发财</code>   <code>`发财`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">发怒</code>   <code>`发怒`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">尴尬</code>   <code>`尴尬`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">鼓掌</code>   <code>`鼓掌`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">害羞</code>   <code>`害羞`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">黑人问号</code>   <code>`黑人问号`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">坏笑</code> <code>`坏笑`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">惊吓</code> <code>`惊吓`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">可爱</code>   <code>`可爱`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">抠鼻子</code>   <code>`抠鼻子`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">困</code>   <code>`困`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">流鼻血</code>   <code>`流鼻血`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">流汗</code>   <code>`流汗`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">腼腆</code>   <code>`腼腆`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">难过</code> <code>`难过`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">呕吐</code> <code>`呕吐`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">亲亲</code>   <code>`亲亲`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">色</code>   <code>`色`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">生病</code>   <code>`生病`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">生气</code>   <code>`生气`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">睡着</code>   <code>`睡着`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">思考</code>   <code>`思考`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">偷笑</code>   <code>`偷笑`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">吐血</code>   <code>`吐血`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">微笑</code>   <code>`微笑`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">委屈</code>   <code>`委屈`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">无奈</code> <code>`无奈`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">笑哭</code> <code>`笑哭`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">斜眼笑</code>   <code>`斜眼笑`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">疑问</code>   <code>`疑问`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">晕</code>   <code>`晕`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">再见</code>   <code>`再见`{:.emoji-plus}</code></td>
    </tr>
    <tr>
      <td><code class="emoji-plus">抓狂</code>   <code>`抓狂`{:.emoji-plus}</code></td>
      <td><code class="emoji-plus">doge</code>   <code>`doge`{:.emoji-plus}</code></td>
    </tr>
  </tbody>
</table>
:ET